name: Rust CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # Install Rust toolchain
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        components: clippy, rustfmt
        override: true

    # Update Linux packages
    - name: Update Linux packages
      run: sudo apt-get update

    # Install or update Rust toolchain (if needed)
    - name: Update Rust toolchain
      run: make install

    # Check Rust versions
    - name: Check Rust versions
      run: make rust-version

    # Build the project in release mode
    - name: Build Release
      run: make release

    # Format the code
    - name: Format Code
      run: make format

    # Run Clippy for linting
    - name: Run Linting
      run: make lint

    # Run custom commands (adjust based on your Makefile)
    - name: Extract Data
      run: make extract

    - name: Transform and Load Data
      run: make transform_load

    - name: Create Record
      run: make create_record

    - name: Read Data
      run: make read_data

    - name: Update Record
      run: make update_record

    - name: Delete Record
      run: make delete_record

    - name: General Query
      run: make general_query

    # Run tests
    - name: Run Tests
      run: make test

    # Upload the optimized binary as an artifact
    - name: Upload Binary Artifact
      uses: actions/upload-artifact@v3
      with:
        name: optimized-binary
        path: target/release/lucy_sql # Replace with your actual binary name

    # Pull repository to ensure it's up to date
    - name: Pull Repository
      run: git pull

    # Generate and push changes (e.g., updated logs)
    - name: Generate and Push Changes
      run: make generate_and_push
